{
  "__": " SIMP Packer manifest to run tests for simp-core or any module     ",
  "__": "  that requires a fully working puppet server.                     ",
  "__": "                                                                   ",
  "__": " USAGE:                                                            ",
  "__": "   `~/bin/packer build -var-file=vars.json simp.json`              ",
  "__": "                                                                   ",
  "__": " NOTES:                                                            ",
  "__": "   - The first `<wait10>`s are killing time until SSH can connect  ",
  "__": "   - The comments starting with ## below will be parsed out by the ",
  "__": "     start up script.                                              ",
  "__": "   - You should not need change this file.  SIMP_PACKER environment",
  "__": "     variables and the simp_conf.yaml file passed should be used   ",
  "__": "     to changed behavior.                                          ",
  "variables" :
    {
      "simp_prompt": "{{env `SIMP_PACKER_simp_prompt`}}",
      "fips": "{{env `SIMP_PACKER_fips`}}",
      "disk_encrypt": "{{env `SIMP_PACKER_disk_encrypt`}}",
      "simp_conf_file": "{{env `SIMP_PACKER_simp_conf_file`}}",
      "big_sleep": "{{env `SIMP_PACKER_big_sleep`}}",
      "host_only_network_name": "{{env `SIMP_PACKER_host_only_network_name`}}",
      "root_password": "{{env `SIMP_PACKER_root_password`}}",
      "vagrant_password": "{{env `SIMP_PACKER_vagrant_password`}}"
    },
  "builders": [
    {
      "type": "virtualbox-iso",
      "communicator":"ssh",
      "ssh_pty": "true",
      "guest_os_type": "RedHat_64",
      "iso_url":       "{{user `iso_url`}}",
      "iso_checksum":    "{{user `iso_checksum`}}",
      "iso_checksum_type": "{{user `iso_checksum_type`}}",
      "disk_size": "50000",
      "vboxmanage": [
        ["modifyvm", "{{.Name}}", "--memory", "4096"],
        ["modifyvm", "{{.Name}}", "--nic1", "nat"],
        ["modifyvm", "{{.Name}}", "--nic2", "hostonly"],
        ["modifyvm", "{{.Name}}", "--hostonlyadapter2", "{{user `host_only_network_name`}}"],
        ["modifyvm", "{{.Name}}", "--cpus", "2"],
        ["modifyvm", "{{.Name}}", "--accelerate3d", "off"]
      ],
      "boot_command": [
        "{{user `simp_prompt`}} {{user `disk_encrypt`}} {{user `fips`}}","<enter>",
        "<wait10><wait10><wait10><wait10><wait10><wait10>",
        "<wait10><wait10><wait10><wait10><wait10><wait10>",
        "<wait10><wait10><wait10><wait10><wait10><wait10>",
        "<wait10><wait10><wait10><wait10><wait10><wait10>",
        "<wait10><wait10><wait10><wait10><wait10><wait10>",
        "<wait10><wait10><wait10><wait10><wait10><wait10>",
        "<wait10><wait10><wait10><wait10><wait10><wait10>",
        "<wait10><wait10><wait10><wait10><wait10><wait10>",
        "<wait10><wait10><wait10><wait10><wait10><wait10>",
        "<wait10><wait10><wait10><wait10><wait10><wait10>",
        "<wait10><wait10><wait10><wait10><wait10><wait10>",
        "<wait10><wait10><wait10><wait10><wait10><wait10>",
        "<wait10><wait10><wait10><wait10>",
        "<wait10><wait10><wait10><wait10>",
        "{{user `big_sleep`}}",
        "simp<enter>UserPassword<enter>",
        "<wait><wait>",
        "UserPassword<enter>",
        "<wait><wait>",
        "{{user `new_password`}}<enter>",
        "<wait><wait>",
        "{{user `new_password`}}<enter>",
        "<wait><wait>",
        "sudo su -<enter>",
        "<wait><wait>",
        "{{user `new_password`}}<enter>",
        "<wait><wait>",
        "echo 'simp ALL=(ALL) NOPASSWD:ALL'  >> /etc/sudoers<enter>",
        "<wait><wait>",
        "exit",
        "exit"
       ],
      "ssh_username": "simp",
      "ssh_password": "{{user `new_password`}}",
      "shutdown_command": "sudo -S shutdown -P now"
    }
  ],
  "provisioners": [
    {
## TEST:  Check if it booted into fips or not according to the
## fips variable set in the boot command.
      "type": "shell",
      "remote_path": "/var/local/simp/inline-fips.sh",
      "execute_command": "sudo chmod +x {{.Path}}; {{.Vars}} sudo bash '{{.Path}}'",
      "inline" : [
        "if [[ {{user `fips`}} == 'fips=0' ]]; then",
          "if [[ `cat /proc/sys/crypto/fips_enabled` != 0 ]]; then",
           "echo 'Fips is not set correctly in start up'",
           "exit 2; fi",
        "else",
           "if [[ `cat /proc/sys/crypto/fips_enabled` != 1 ]]; then",
           "echo 'Fips is not set correctly in start up'",
           "exit 2; fi",
        "fi"
      ]
    },
    {
## Set up the vagrant and root passwords
      "type": "shell",
      "remote_path": "/var/local/simp/inline-vagrant-users.sh",
      "execute_command": "sudo chmod +x {{.Path}}; {{.Vars}} sudo bash '{{.Path}}'",
      "inline" : [
        "sed -i 's/enforce_for_root//' /etc/pam.d/system-auth /etc/pam.d/*",
        "useradd vagrant",
        "echo {{user `vagrant_password`}} | passwd vagrant --stdin",
        "echo {{user `root_password`}} | passwd root --stdin",
        "echo 'vagrant ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers",
        "#puppet apply -e 'include site::vagrant'",
        "chmod g+rX -R /home/vagrant"
      ]
    },
    {
## Copy files from the host to the virtual machine for use later on
      "type": "file",
      "source": "files",
      "destination": "/var/local/simp/"
    },
    {
## Copy scripts from the host to the virtual machine for use later on
      "type": "file",
      "source": "scripts",
      "destination": "/var/local/simp/"
    },
    {
## Now we run simp using the simp conf yaml file specified in the shell.
## It should complete successfully.
      "type": "shell",
      "remote_path": "/var/local/simp/inline-simp-config.sh",
      "execute_command": "sudo chmod +x {{.Path}}; {{.Vars}} sudo -E bash '{{.Path}}'",
      "inline" : [
         "simp config -a {{user `simp_conf_file`}}"
       ]
    },
    {
## Load manifest that will keep the vagrant user and will set up simp
## user so it can continue to use sudo and ssh into the server when
## puppet is running and simp has locked the system down.
      "type": "shell",
      "remote_path": "/var/local/simp/puppet-usersetup.sh",
      "execute_command": "sudo chmod +x {{.Path}}; {{.Vars}} sudo bash '{{.Path}}'",
      "script": "scripts/puppet-usersetup.sh"
    },
    {
## Now run bootstrap.  It should complete successfully and reboot.
      "type": "shell",
      "remote_path": "/var/local/simp/inline-simp-bootstrap.sh",
      "execute_command": "sudo chmod +x {{.Path}}; {{.Vars}} sudo -E bash '{{.Path}}'",
      "inline" : [
        "simp bootstrap"
       ]
    },
    {
## Reboot the system.
      "type": "shell",
      "remote_path": "/var/local/simp/inline-simp-reboot.sh",
      "execute_command": "sudo chmod +x {{.Path}}; {{.Vars}} sudo -E bash '{{.Path}}'",
      "inline" : [
         "echo 'rebooting now'",
         "shutdown -r now"
       ]
    },
    {
      "type": "shell",
      "remote_path": "/var/local/simp/runtests.sh",
      "execute_command": "sudo chmod +x {{.Path}}; {{.Vars}} sudo -E bash '{{.Path}}'",
      "inline" : [
	       "chmod +x /var/local/simp/scripts/simp*.sh",
         "/var/local/simp/scripts/simp-pupmod_testfips.sh",
         "echo simp-pupmod_testfips complete",
         "/var/local/simp/scripts/simp-pupmod_test.sh",
         "echo simp-pupmod_test complete"
      ]
    },
    {
      "type": "shell",
      "remote_path": "/var/local/simp/scripts/simp-pupmod_test_checksettings.sh",
      "execute_command": "chmod +x {{.Path}}; {{.Vars}} sh '{{.Path}}'",
      "environment_vars" : [
        "SIMP_PACKER_simp_prompt={{user `simp_prompt`}}",
        "SIMP_PACKER_disk_encrypt={{user `disk_encrypt`}}"
      ],
      "script" : "scripts/simp-pupmod_test_checksettings.sh"
    }
  ]
}


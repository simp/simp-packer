# The testing matrix considers ruby/puppet versions supported by SIMP:
# --------------------------------------------------------------------
# Release       Puppet   Ruby    EOL
# SIMP 6.4      5.5      2.4.10  TBD
# SIMP 6.5      6.18     2.4.10  TBD
---
stages:
  - 'validation'
  - 'acceptance'
  - 'compliance'
  - 'deployment'

image: 'ruby:2.5'

variables:
  PUPPET_VERSION:    'UNDEFINED' # <- Matrixed jobs MUST override this (or fail)
  BUNDLER_VERSION:   '1.17.1'

  # Force dependencies into a path the gitlab-runner user can write to.
  # (This avoids some failures on Runners with misconfigured ruby environments.)
  GEM_HOME:          .vendor/gem_install
  BUNDLE_CACHE_PATH: .vendor/bundle
  BUNDLE_PATH:       .vendor/bundle
  BUNDLE_BIN:        .vendor/gem_install/bin
  BUNDLE_NO_PRUNE:   'true'


# bundler dependencies and caching
#
# - Cache bundler gems between pipelines foreach Ruby version
# - Try to use cached and local resources before downloading dependencies
# --------------------------------------
.setup_bundler_env: &setup_bundler_env
  cache:
    untracked: true
    key: "${CI_PROJECT_NAMESPACE}_ruby-${MATRIX_RUBY_VERSION}_bundler"
    paths:
      - '.vendor'
  before_script:
    - 'ruby -e "puts %(Environment Variables:\n  * #{ENV.keys.grep(/PUPPET|SIMP|BEAKER|MATRIX/).map{|v| %(#{v} = #{ENV[v]})}.join(%(\n  * ))})"'
    - 'declare GEM_BUNDLER_VER=(-v "~> ${BUNDLER_VERSION:-1.16.0}")'
    - 'declare GEM_INSTALL_CMD=(gem install --no-document)'
    - 'declare BUNDLER_INSTALL_CMD=(bundle install --no-binstubs --jobs $(nproc) "${FLAGS[@]}")'
    - 'mkdir -p ${GEM_HOME} ${BUNDLER_BIN}'
    - 'gem list -ie "${GEM_BUNDLER_VER[@]}" --silent bundler || "${GEM_INSTALL_CMD[@]}" --local "${GEM_BUNDLER_VER[@]}" bundler || "${GEM_INSTALL_CMD[@]}" "${GEM_BUNDLER_VER[@]}" bundler'
    - 'rm -rf pkg/ || :'
    - 'bundle check || rm -f Gemfile.lock && ("${BUNDLER_INSTALL_CMD[@]}" --local || "${BUNDLER_INSTALL_CMD[@]}" || bundle pristine ||  "${BUNDLER_INSTALL_CMD[@]}") || { echo "PIPELINE: Bundler could not install everything (see log output above)" && exit 99 ; }'

# To avoid running a prohibitive number of tests every commit,
# don't set this env var in your gitlab instance
.only_with_SIMP_FULL_MATRIX: &only_with_SIMP_FULL_MATRIX
  only:
    variables:
      - $SIMP_FULL_MATRIX == "yes"

# Puppet Versions
#-----------------------------------------------------------------------

.pup_5_5_20: &pup_5_5_20
  image: 'ruby:2.4'
  variables:
    PUPPET_VERSION: '5.5.20'
    BEAKER_PUPPET_COLLECTION: 'puppet5'
    MATRIX_RUBY_VERSION: '2.4'

.pup_6_18: &pup_6_18
  image: 'ruby:2.5'
  variables:
    PUPPET_VERSION: '~> 6.18.0'
    BEAKER_PUPPET_COLLECTION: 'puppet6'
    MATRIX_RUBY_VERSION: '2.5'


# Testing Environments
#-----------------------------------------------------------------------

.lint_tests: &lint_tests
  stage: 'validation'
  tags: ['docker']
  <<: *pup_6_18
  <<: *setup_bundler_env

.unit_tests: &unit_tests
  stage: 'validation'
  tags: ['docker']
  <<: *setup_bundler_env
  script:
    - 'bundle exec rake spec'
    - 'bundle exec rake test:puppet'


# Pipeline / testing matrix
#=======================================================================

rubocop:
  <<: *lint_tests
  script:
    - 'bundle exec rake test:rubocop'

shellcheck:
  stage: 'validation'
  <<: *lint_tests
  tags: ['shellcheck']
  script:
    - 'bundle exec rake test:shellcheck'

packer:
  stage: 'validation'
  <<: *lint_tests
  tags: ['packer']
  script:
    - 'packer --version'
    - 'bundle exec rake packer:validate'

# Spec tests
#=======================================================================
pup5.5.20-unit:
  <<: *pup_5_5_20
  <<: *unit_tests


pup6.18-unit:
  <<: *pup_6_18
  <<: *unit_tests


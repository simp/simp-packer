#========================================================================
# simp config answers
#
# You can use these answers to quickly configure subsequent
# simp installations by running the command:
#
#   simp config -A /PATH/TO/THIS/FILE
#
# simp config will prompt for any missing items.
#
# NOTE:
# - All YAML keys that begin with 'cli::' are used by
#   simp config, internally, and are not Puppet hieradata.
# - Some entries have been automatically determined by
#   `simp config` based on the values of other entries
#   and/or gathered server status.
#========================================================================
---
# === chrony::servers ===
# NTP time servers used by cronyd
chrony::servers: "%{alias('simp_options::ntp::servers')}"

# === cli::is_simp_ldap_server ===
# Whether the SIMP server will also be a SIMP-provided LDAP server.
#
cli::is_simp_ldap_server: true

# === cli::network::dhcp ===
# Whether to use DHCP to retrieve your network settings ("dhcp") or to
# use static network settings ("static").
cli::network::dhcp: static

# === cli::network::gateway ===
# The default gateway.
cli::network::gateway: 192.168.121.1

# === cli::network::hostname ===
# The Fully Qualified Domain Name (FQDN) of the system.
cli::network::hostname: puppet66.simp.test

# === cli::network::interface ===
# The network interface to use to connect the SIMP server to the network.
cli::network::interface: ens3

# === cli::network::ipaddress ===
# The IP address of the system.
cli::network::ipaddress: 192.168.121.7

# === cli::network::netmask ===
# The netmask of the system.
cli::network::netmask: 255.255.255.0

# === cli::network::set_up_nic ===
# Whether to configure and activate this NIC now. A properly configured
# NIC with associated hostname is required for SIMP to be bootstrapped.
cli::network::set_up_nic: true

# === cli::set_grub_password ===
# Whether to set the GRUB password on this system.
cli::set_grub_password: true

# === cli::simp::scenario ===
# The SIMP scenario: Predetermined set of security features to apply.
cli::simp::scenario: simp

# === simp::runlevel ===
# The default system runlevel (1-5).
simp::runlevel: 3

# === simp::sssd::client::ldap_server_type ===
# The type of LDAP server that the system is communicating with.
simp::sssd::client::ldap_server_type: plain

# === simp::yum::repo::local_os_updates::enable_repo ===
# Whether to enable the SIMP-managed OS Update YUM repository.
simp::yum::repo::local_os_updates::enable_repo: false

# === simp::yum::repo::local_os_updates::servers ===
# The YUM server(s) for SIMP-managed, OS Update packages.
simp::yum::repo::local_os_updates::servers:
- "%{hiera('simp_options::puppet::server')}"

# === simp::yum::repo::local_simp::enable_repo ===
# Whether to enable the SIMP-managed, SIMP and
# SIMP dependency YUM repository.
simp::yum::repo::local_simp::enable_repo: false

# === simp::yum::repo::local_simp::servers ===
# The YUM server(s) for SIMP-managed, SIMP and
# SIMP dependency packages.
simp::yum::repo::local_simp::servers:
- "%{hiera('simp_options::puppet::server')}"

# === simp_grub::admin ===
# The GRUB 2 administrative username
simp_grub::admin: root

# === simp_grub::password ===
# The password to access GRUB.
#
# The value entered is used to set the GRUB password and to generate a hash
# stored in simp_grub::password.
# P@ssw0rdP@ssw0rd
simp_grub::password: grub.pbkdf2.sha512.10000.8F118DB47AD1B075CAD2A930A21B6ACE328868B5279B65012C26EC6EF42CCEB62FED27421D3EDB13549EB5AC55EB167FB0C112F6829B52D2A5564A6EA14F11D5.E4641524BDDBF57E57A725E4F88612572B1B74B3CC0FF8EBEBD52D2C72EF9D54E8AB03360010BF33CB61A0FC5360CCCA2C377B4C97102EBA61AD96752F680E1D


# === simp_openldap::server::conf::rootpw ===
# The salted LDAP Root password hash.
#
# When set via 'simp config', this password hash is generated from
# the password entered on the command line.
#  P@ssw0rdP@ssw0rd
simp_openldap::server::conf::rootpw: "{SSHA}xux83JB+KprEbGMpoOftNMFrp/jkXHfH"

# === simp_options::dns::search ===
# The DNS domain search string.
#
# Remember to put these in the appropriate order for your environment!
simp_options::dns::search:
- simp.test

# === simp_options::dns::servers ===
# A list of DNS servers for the managed hosts.
#
# If the first entry of this list is set to '127.0.0.1', then
# all clients will configure themselves as caching DNS servers
# pointing to the other entries in the list.
#
# If you are using the SIMP ``resolv`` module, and the system is a DNS server
# using the SIMP ``named`` module but you wish to have your node point to a
# different DNS server for primary DNS resolution, then you MUST set
# ``resolv::named_server`` to ``true`` via Hiera.
#
# This will get around the convenience logic that was put in place to handle
# the caching entries and will not attempt to convert your system to a
# caching DNS server.
simp_options::dns::servers:
- 192.168.121.7

# === simp_options::fips ===
# Prepare system to use FIPS mode.
#
# simp_options::fips enforces strict compliance with FIPS-140-2.  All core SIMP
# modules can support this configuration. Enabling simp_options::fips will
# enable FIPS on this puppet environment.
simp_options::fips: false
# === simp_options::ldap ===
# Whether to use SIMP LDAP support on this system.
#
# If you disable this, modules will not attempt to use LDAP where possible.
simp_options::ldap: true

# === simp_options::ldap::base_dn ===
# The Base Distinguished Name of the LDAP server.
simp_options::ldap::base_dn: dc=simp,dc=test

# === simp_options::ldap::bind_hash ===
# The salted LDAP Bind password hash.
simp_options::ldap::bind_hash: "{SSHA}xux83JB+KprEbGMpoOftNMFrp/jkXHfH"

# === simp_options::ldap::bind_pw ===
# The LDAP Bind password.
simp_options::ldap::bind_pw: P@ssw0rdP@ssw0rd

# === simp_options::ldap::sync_hash ===
#
simp_options::ldap::sync_hash: "{SSHA}xux83JB+KprEbGMpoOftNMFrp/jkXHfH"

# === simp_options::ldap::sync_pw ===
# The LDAP Sync password.
simp_options::ldap::sync_pw: P@ssw0rdP@ssw0rd

# === simp_options::ntp::servers ===
# Your network's NTP time servers.
#
# A consistent time source is critical to a functioning public key
# infrastructure, and thus your site security. **DO NOT** attempt to
# run multiple production systems using individual hardware clocks!
#
# For many networks, the default gateway (192.168.121.1) provides an NTP server.
simp_options::ntp::servers:
- 192.168.121.1

# === simp_options::puppet::ca ===
# The Puppet Certificate Authority.
simp_options::puppet::ca: puppet66.simp.test

# === simp_options::puppet::ca_port ===
# The port on which the Puppet Certificate Authority will listen
# (8141 by default).
simp_options::puppet::ca_port: 8141

# === simp_options::puppet::server ===
# The Hostname or FQDN of the Puppet server.
simp_options::puppet::server: puppet66.simp.test

# === simp_options::syslog::log_servers ===
# The log server(s) to receive forwarded logs.
#
# No log forwarding is enabled when this list is empty.  Only use hostnames
# here if at all possible.
simp_options::syslog::log_servers: []

# === simp_options::trusted_nets ===
# A list of subnets to permit, in CIDR notation.
#
# If you need this to be more (or less) restrictive for a given class,
# you can override it in Hiera.
simp_options::trusted_nets:
- 192.168.121.0/24

# === sssd::domains ===
# A list of domains for SSSD to use.
#
# * When you are using SIMP-provided LDAP, this field should include 'LDAP',
#   the name of the SSSD domain SIMP creates with the 'ldap' provider.
#
sssd::domains:
- LDAP

# === svckill::mode ===
# Strategy svckill should use when it encounters undeclared services.
#
# 'enforcing' = Shut down and disable all services not listed in your
#               manifests or the exclusion file
# 'warning'   = Only report what undeclared services should be shut
#               down and disabled, without actually making the changes
#               to the system
#
# NOTICE: svckill is the mechanism that SIMP uses to comply with the
# requirement that no unauthorized services are running on your system.
# If you are fully aware of all services that need to be running on the
# system, including any custom applications, use 'enforcing'.  If you
# first need to ascertain which services should be running on the system,
# use 'warning'.
svckill::mode: enforcing

# === useradd::securetty ===
# A list of TTYs for which the root user can login.
#
useradd::securetty:
  - tty0
  - tty1
